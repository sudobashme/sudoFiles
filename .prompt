#!/usr/bin/env bash
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
#
# - - - - - - - - - - - - [ sudofile project ] - - - - - - - - - - - - - - - - 
#
# - - - - - - - - - - - - - - [ .prompt ] - - - - - - - - - - - - - - - - - - 
#
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

MAGENTA=$(tput setaf 125)
ORANGE=$(tput setaf 166)
GREEN=$(tput setaf 64)
PURPLE=$(tput setaf 61)
WHITE=$(tput setaf 244)
DARKGRAY=$(tput setaf 8)
LIGHTRED=$(tput setaf 197)
LIGHTGRAY=$(tput setaf 10)
YELLOW=$(tput setaf 11)
LIGHTBLUE=$(tput setaf 39)
BOLD=$(tput bold)
RESET=$(tput sgr0)

export MAGENTA
export ORANGE
export GREEN
export PURPLE
export WHITE
export DARKGRAY
export LIGHTRED
export LIGHTGRAY
export YELLOW
export LIGHTBLUE
export BOLD
export RESET

function parse_git_dirty() {
  [[ $(git status 2> /dev/null | tail -n1) != *"working directory clean"* ]] && echo "*"
}

function parse_git_branch() {
  git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/\1$(parse_git_dirty)/"
}

export PS1="\n$GREEN --] $PURPLE\w$GREEN [-- \n$DARKGRAY($WHITE\t$DARKGRAY)-($ORANGE\u$DARKGRAY)-($WHITE\h$DARKGRAY)\n$GREEN --]$PURPLE\$([[ -n \$(git branch 2> /dev/null) ]] && echo \" on \")\$(parse_git_branch) $GREEN[-- $RESET"
